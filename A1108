{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d19f939f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: sqlalchemy in c:\\users\\devci\\appdata\\local\\programs\\python\\python313\\lib\\site-packages (2.0.42)\n",
      "Requirement already satisfied: greenlet>=1 in c:\\users\\devci\\appdata\\local\\programs\\python\\python313\\lib\\site-packages (from sqlalchemy) (3.2.3)\n",
      "Requirement already satisfied: typing-extensions>=4.6.0 in c:\\users\\devci\\appdata\\local\\programs\\python\\python313\\lib\\site-packages (from sqlalchemy) (4.14.1)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 25.1.1 -> 25.2\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: psycopg2 in c:\\users\\devci\\appdata\\local\\programs\\python\\python313\\lib\\site-packages (2.9.10)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 25.1.1 -> 25.2\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in c:\\users\\devci\\appdata\\local\\programs\\python\\python313\\lib\\site-packages (2.3.1)\n",
      "Requirement already satisfied: numpy>=1.26.0 in c:\\users\\devci\\appdata\\local\\programs\\python\\python313\\lib\\site-packages (from pandas) (2.3.2)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\devci\\appdata\\roaming\\python\\python313\\site-packages (from pandas) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\devci\\appdata\\local\\programs\\python\\python313\\lib\\site-packages (from pandas) (2025.2)\n",
      "Requirement already satisfied: tzdata>=2022.7 in c:\\users\\devci\\appdata\\local\\programs\\python\\python313\\lib\\site-packages (from pandas) (2025.2)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\devci\\appdata\\roaming\\python\\python313\\site-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 25.1.1 -> 25.2\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "!pip install sqlalchemy\n",
    "!pip install psycopg2\n",
    "!pip install pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "92ee8da1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "conexion realizada\n",
      "   id  nombres estado apellidos   telefono                 correo  \\\n",
      "0   1  Edgardo      A      Ugaz  975975151  expectra2010@sdadasda   \n",
      "1   2  Patrick      A  CÃ¡rdenas  965036677         ugaz@gmail.com   \n",
      "\n",
      "  polizas_nuevas polizas_nuevas_tipo polizas_renovacion  \\\n",
      "0            123                   1                123   \n",
      "1            456                   1                778   \n",
      "\n",
      "  polizas_renovacion_tipo          vigencia_desde      vigencia_hasta  \\\n",
      "0                       1 2025-04-08 23:17:02.374 2025-04-30 05:00:00   \n",
      "1                       1 2025-04-08 23:18:47.407 2025-04-25 05:00:00   \n",
      "\n",
      "   vigencia_tipo  \n",
      "0           True  \n",
      "1           True  \n"
     ]
    }
   ],
   "source": [
    "from sqlalchemy import create_engine\n",
    "import pandas as pd\n",
    "\n",
    "Usuario = 'relatividad'\n",
    "Password = 'relatividad2025_'\n",
    "Host = 'einstein.c3g88cukgiw6.us-east-1.rds.amazonaws.com'\n",
    "Puerto = '5432'\n",
    "BD = 'sigapFba'\n",
    "\n",
    "conexion_url = f'postgresql+psycopg2://{Usuario}:{Password}@{Host}:{Puerto}/{BD}'\n",
    "\n",
    "engine = create_engine(conexion_url)\n",
    "\n",
    "try:\n",
    "    conn = engine.connect()\n",
    "    print(\"conexion realizada\")\n",
    "\n",
    "    query = \"\"\"\n",
    "select \n",
    "p.id,\n",
    "p.nombres,\n",
    "p.estado,\n",
    "p.apellidos,\n",
    "p.telefono,\n",
    "p.correo,\n",
    "p.polizas_nuevas,\n",
    "p.polizas_nuevas_tipo,\n",
    "p.polizas_renovacion,\n",
    "p.polizas_renovacion_tipo,\n",
    "p.vigencia_desde,\n",
    "p.vigencia_hasta,\n",
    "p.vigencia_tipo\n",
    "from maestros.promotor p\n",
    "    \n",
    "\"\"\"\n",
    "    \n",
    "    df = pd.read_sql(query, conn)\n",
    "    \n",
    "    print(df)\n",
    "    conn.close\n",
    "except Exception as e:\n",
    "    print(\"error al conectar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d467b5b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "conexion realizada\n",
      "   id     nombre estado  prospecto_id                 prospecto_nombres  \\\n",
      "0  23  2025-1159      A             8                           THRIECY   \n",
      "1  24  2025-2598      A            10                      CQFP YODEMIR   \n",
      "2  25  2025-1884      A            10                      CQFP YODEMIR   \n",
      "3  26  2025-2534      A            14  FBA CORREDORES DE SEGUROS S.A.C.   \n",
      "4  27   2025-257      A            15                           THRIECY   \n",
      "\n",
      "  prospecto_apellido_materno        prospecto_apellido_paterno   placa  \\\n",
      "0                   PFLOCKER                           RAVENET  bsv167   \n",
      "1                   VERROCAL                             COBOS  BSV167   \n",
      "2                   VERROCAL                             COBOS  BSV167   \n",
      "3                       None  FBA CORREDORES DE SEGUROS S.A.C.  BSA486   \n",
      "4                   PFLOCKER                           RAVENET  BSV167   \n",
      "\n",
      "          marca_modelo anho_fab suma_asegurada es_nuevo           uso_desde  \\\n",
      "0  CHEVROLET - CAPTIVA     None       18600.00     None 2025-08-07 05:00:00   \n",
      "1  CHEVROLET - CAPTIVA     None       18600.00     None 2025-08-07 05:00:00   \n",
      "2  CHEVROLET - CAPTIVA     None       18600.00     None 2025-08-08 05:00:00   \n",
      "3      MAZDA - MAZDA 3     None       19600.00     None 2025-08-08 05:00:00   \n",
      "4  CHEVROLET - CAPTIVA     None       18600.00     None 2025-08-08 05:00:00   \n",
      "\n",
      "            uso_hasta uso_vigencia fecha_registro usuario_registro  \\\n",
      "0 2026-08-07 05:00:00            0     2025-08-07             None   \n",
      "1 2026-08-07 05:00:00            0     2025-08-08             None   \n",
      "2 2026-08-08 05:00:00            0     2025-08-08             None   \n",
      "3 2026-08-08 05:00:00            0     2025-08-08             None   \n",
      "4 2026-08-08 05:00:00            0     2025-08-08             None   \n",
      "\n",
      "                                   planes_cotizacion   producto  \\\n",
      "0  [{\"plan\":386374,\"nombrePlan\":\"CORP. FBA - PLAT...  VEHICULAR   \n",
      "1  [{\"plan\":386374,\"nombrePlan\":\"CORP. FBA - PLAT...  VEHICULAR   \n",
      "2  [{\"plan\":386374,\"nombrePlan\":\"CORP. FBA - PLAT...  VEHICULAR   \n",
      "3  [{\"plan\":386374,\"nombrePlan\":\"CORP. FBA - PLAT...  VEHICULAR   \n",
      "4  [{\"plan\":386374,\"nombrePlan\":\"CORP. FBA - PLAT...  VEHICULAR   \n",
      "\n",
      "                uuid_legacy  \n",
      "0  689528ab2eae8ba52e7b316f  \n",
      "1  68956612438f5ab142ea6abe  \n",
      "2  6895879498fbafbd3c1a9046  \n",
      "3  68960df298fbafbd3c1aa072  \n",
      "4  689616b198fbafbd3c1aa0a2  \n"
     ]
    }
   ],
   "source": [
    "from sqlalchemy import create_engine\n",
    "import pandas as pd\n",
    "\n",
    "Usuario = 'relatividad'\n",
    "Password = 'relatividad2025_'\n",
    "Host = 'einstein.c3g88cukgiw6.us-east-1.rds.amazonaws.com'\n",
    "Puerto = '5432'\n",
    "BD = 'sigapFba'\n",
    "\n",
    "conexion_url = f'postgresql+psycopg2://{Usuario}:{Password}@{Host}:{Puerto}/{BD}'\n",
    "\n",
    "engine = create_engine(conexion_url)\n",
    "\n",
    "try:\n",
    "    conn = engine.connect()\n",
    "    print(\"conexion realizada\")\n",
    "\n",
    "    query = \"\"\"\n",
    "select \n",
    "p.id,\n",
    "p.nombre,\n",
    "p.estado,\n",
    "p.prospecto_id,\n",
    "a.nombres as prospecto_nombres,\n",
    "a.apellido_materno as prospecto_apellido_materno,\n",
    "a.apellido_paterno as prospecto_apellido_paterno,\n",
    "p.placa,\n",
    "p.marca_modelo,\n",
    "p.anho_fab,\n",
    "p.suma_asegurada,\n",
    "p.es_nuevo,\n",
    "p.uso_desde,\n",
    "p.uso_hasta,\n",
    "p.uso_vigencia,\n",
    "p.fecha_registro,\n",
    "p.usuario_registro,\n",
    "p.planes_cotizacion,\n",
    "p.producto,\n",
    "p.uuid_legacy\n",
    "from poliza.cotizacion p\n",
    "left join poliza.prospecto a on p.prospecto_id = a.id\n",
    "\"\"\"\n",
    "    \n",
    "    df = pd.read_sql(query, conn)\n",
    "    \n",
    "    print(df)\n",
    "    conn.close\n",
    "except Exception as e:\n",
    "    print(\"error al conectar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d9a72c3c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "conexion realizada\n",
      "   id            nombre estado prima_maxima\n",
      "0   1       La Positiva      A         None\n",
      "1   2       Mapfre Peru      A         None\n",
      "2   3  Pacifico Seguros      A         None\n",
      "3   4     Rimac Seguros      A         None\n",
      "4   5          Protecta      A         None\n",
      "5   6           Sanitas      A         36.9\n",
      "6  16          Qualitas      A         None\n",
      "7  17       Interseguro      A         None\n"
     ]
    }
   ],
   "source": [
    "from sqlalchemy import create_engine\n",
    "import pandas as pd\n",
    "\n",
    "Usuario = 'relatividad'\n",
    "Password = 'relatividad2025_'\n",
    "Host = 'einstein.c3g88cukgiw6.us-east-1.rds.amazonaws.com'\n",
    "Puerto = '5432'\n",
    "BD = 'sigapFba'\n",
    "\n",
    "conexion_url = f'postgresql+psycopg2://{Usuario}:{Password}@{Host}:{Puerto}/{BD}'\n",
    "\n",
    "engine = create_engine(conexion_url)\n",
    "\n",
    "try:\n",
    "    conn = engine.connect()\n",
    "    print(\"conexion realizada\")\n",
    "\n",
    "    query = \"\"\"\n",
    "select\n",
    "\tp.id,\n",
    "\tp.nombre,\n",
    "\tp.estado,\n",
    "\tp.prima_maxima\n",
    "from poliza.aseguradora p\n",
    "\"\"\"\n",
    "    \n",
    "    df = pd.read_sql(query, conn)\n",
    "    \n",
    "    print(df)\n",
    "    conn.close\n",
    "except Exception as e:\n",
    "    print(\"error al conectar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "476384c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "conexion realizada\n",
      "    id                                     nombre estado prima_minimo  tasa  \\\n",
      "0    3    PREMIER ORO - PAGO POR KM HASTA 3000 Km      I         None  None   \n",
      "1    4    PREMIER ORO - PAGO POR KM HASTA 4000 Km      I         None  None   \n",
      "2    5    PREMIER ORO - PAGO POR KM HASTA 5000 Km      I         None  None   \n",
      "3    6    PREMIER ORO - PAGO POR KM HASTA 6000 Km      I         None  None   \n",
      "4    7    PREMIER ORO - PAGO POR KM HASTA 8000 Km      I         None  None   \n",
      "5    8  PREMIER PLATA - PAGO POR KM HASTA 3000 Km      I         None  None   \n",
      "6    9  PREMIER PLATA - PAGO POR KM HASTA 4000 Km      I         None  None   \n",
      "7   10  PREMIER PLATA - PAGO POR KM HASTA 5000 Km      I         None  None   \n",
      "8   11  PREMIER PLATA - PAGO POR KM HASTA 6000 Km      I         None  None   \n",
      "9   12  PREMIER PLATA - PAGO POR KM HASTA 8000 Km      I         None  None   \n",
      "10   2                       CORP. FBA - VEPARMIL      A         None  None   \n",
      "11   1                    CORP. FBA - PLATINUM TR      A         None  None   \n",
      "12  13                                Premium 0KM      A         None  None   \n",
      "13  14                                  Premium I      A         None  None   \n",
      "14  15                             Premium 0KM II      A         None  None   \n",
      "15  16                                 Premium II      A         None  None   \n",
      "16  17                                   PacÃ­fico      A         None  None   \n",
      "17  18                                     Plan B      A         None  None   \n",
      "18  19                        Plan buen conductor      A         None  None   \n",
      "19  20                                   Estrella      A         None  None   \n",
      "20  21                                Tradicional      A         None  None   \n",
      "\n",
      "    aseguradora_id aseguradora_nombre plan_code producto  vehiculo_uso_id  \\\n",
      "0              4.0      Rimac Seguros    368969     2288              1.0   \n",
      "1              4.0      Rimac Seguros    368974     2288              1.0   \n",
      "2              4.0      Rimac Seguros    368978     2288              1.0   \n",
      "3              4.0      Rimac Seguros    368982     2288              1.0   \n",
      "4              4.0      Rimac Seguros    368986     2288              1.0   \n",
      "5              4.0      Rimac Seguros    370119     2288              1.0   \n",
      "6              4.0      Rimac Seguros    370132     2288              1.0   \n",
      "7              4.0      Rimac Seguros    370157     2288              1.0   \n",
      "8              4.0      Rimac Seguros    370164     2288              1.0   \n",
      "9              4.0      Rimac Seguros    370168     2288              1.0   \n",
      "10             4.0      Rimac Seguros    373027     2288              1.0   \n",
      "11             4.0      Rimac Seguros    386374     2288              1.0   \n",
      "12             2.0        Mapfre Peru     30000    30001              1.0   \n",
      "13             2.0        Mapfre Peru     30001    30001              1.0   \n",
      "14             2.0        Mapfre Peru     30002    30001              1.0   \n",
      "15             2.0        Mapfre Peru     30003    30001              1.0   \n",
      "16             3.0   Pacifico Seguros     20001    20001              1.0   \n",
      "17             1.0        La Positiva     10001    10001              1.0   \n",
      "18             1.0        La Positiva     10002    10001              1.0   \n",
      "19            16.0           Qualitas     40001    40001              1.0   \n",
      "20            16.0           Qualitas     40002    40002              1.0   \n",
      "\n",
      "   vehiculo_uso_nombre legacy_id  \n",
      "0           PARTICULAR      None  \n",
      "1           PARTICULAR      None  \n",
      "2           PARTICULAR      None  \n",
      "3           PARTICULAR      None  \n",
      "4           PARTICULAR      None  \n",
      "5           PARTICULAR      None  \n",
      "6           PARTICULAR      None  \n",
      "7           PARTICULAR      None  \n",
      "8           PARTICULAR      None  \n",
      "9           PARTICULAR      None  \n",
      "10          PARTICULAR    386374  \n",
      "11          PARTICULAR    373027  \n",
      "12          PARTICULAR     30000  \n",
      "13          PARTICULAR     30001  \n",
      "14          PARTICULAR     30002  \n",
      "15          PARTICULAR     30003  \n",
      "16          PARTICULAR     20001  \n",
      "17          PARTICULAR     10001  \n",
      "18          PARTICULAR     10002  \n",
      "19          PARTICULAR     40001  \n",
      "20          PARTICULAR     40002  \n"
     ]
    }
   ],
   "source": [
    "from sqlalchemy import create_engine\n",
    "import pandas as pd\n",
    "\n",
    "Usuario = 'relatividad'\n",
    "Password = 'relatividad2025_'\n",
    "Host = 'einstein.c3g88cukgiw6.us-east-1.rds.amazonaws.com'\n",
    "Puerto = '5432'\n",
    "BD = 'sigapFba'\n",
    "\n",
    "conexion_url = f'postgresql+psycopg2://{Usuario}:{Password}@{Host}:{Puerto}/{BD}'\n",
    "\n",
    "engine = create_engine(conexion_url)\n",
    "\n",
    "try:\n",
    "    conn = engine.connect()\n",
    "    print(\"conexion realizada\")\n",
    "\n",
    "    query = \"\"\"\n",
    "select\n",
    "\tp.id,\n",
    "\tp.nombre,\n",
    "\tp.estado,\n",
    "\tp.prima_minimo,\n",
    "\tp.tasa,\n",
    "\tp.aseguradora_id,\n",
    "\ta.nombre as aseguradora_nombre,\n",
    "\tp.plan_code,\n",
    "\tp.producto,\n",
    "\tp.vehiculo_uso_id,\n",
    "\tb.nombre as vehiculo_uso_nombre,\n",
    "\tp.legacy_id\n",
    "from poliza.aseguradora_plan p\n",
    "left join poliza.aseguradora a on p.aseguradora_id = a.id\n",
    "left join maestros.vehiculo_uso b on p.vehiculo_uso_id = b.id\n",
    "\"\"\"\n",
    "    \n",
    "    df = pd.read_sql(query, conn)\n",
    "    \n",
    "    print(df)\n",
    "    conn.close\n",
    "except Exception as e:\n",
    "    print(\"error al conectar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "047583d9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "conexion realizada\n",
      "    id                 nombre  aseguradora_id aseguradora_nombre gps estado  \\\n",
      "0   41          Bajo riesgo 2               4      Rimac Seguros   N      A   \n",
      "1   42                 Pickup               1        La Positiva   N      A   \n",
      "2   43         Chinos e hindÃº              16           Qualitas   N      A   \n",
      "3   44  Chinos e hindÃº pickup              17        Interseguro   N      A   \n",
      "4   45         Mediano riesgo               4      Rimac Seguros   N      A   \n",
      "5   46                 Pickup              17        Interseguro   N      A   \n",
      "6   47         Chinos e hindÃº               2        Mapfre Peru   N      A   \n",
      "7   48            Alto Riesgo              17        Interseguro   N      A   \n",
      "8   49         Chinos e hindÃº               3   Pacifico Seguros   N      A   \n",
      "9   50                 Pickup               4      Rimac Seguros   N      A   \n",
      "10  51            Alto riesgo               2        Mapfre Peru   N      A   \n",
      "11  52  Chinos e hindÃº pickup               4      Rimac Seguros   N      A   \n",
      "12  53  Chinos e hindÃº pickup              16           Qualitas   N      A   \n",
      "13  54         Chinos e hindÃº              17        Interseguro   N      A   \n",
      "14  55            Bajo riesgo               2        Mapfre Peru   N      A   \n",
      "15  56         Mediano riesgo               1        La Positiva   N      A   \n",
      "16  57  Chinos e hindÃº pickup               3   Pacifico Seguros   N      A   \n",
      "17  58            Alto riesgo               4      Rimac Seguros   N      A   \n",
      "18  59  Chinos e hindÃº pickup               2        Mapfre Peru   N      A   \n",
      "19  60                 Pickup               3   Pacifico Seguros   N      A   \n",
      "\n",
      "   prima_minima  desc_max  \n",
      "0          None     100.0  \n",
      "1          None     100.0  \n",
      "2          None     100.0  \n",
      "3          None     100.0  \n",
      "4          None     100.0  \n",
      "5          None     100.0  \n",
      "6          None     100.0  \n",
      "7          None     100.0  \n",
      "8          None     100.0  \n",
      "9          None     100.0  \n",
      "10         None     100.0  \n",
      "11         None     100.0  \n",
      "12         None     100.0  \n",
      "13         None     100.0  \n",
      "14         None     100.0  \n",
      "15         None     100.0  \n",
      "16         None     100.0  \n",
      "17         None     100.0  \n",
      "18         None     100.0  \n",
      "19         None     100.0  \n"
     ]
    }
   ],
   "source": [
    "from sqlalchemy import create_engine\n",
    "import pandas as pd\n",
    "\n",
    "Usuario = 'relatividad'\n",
    "Password = 'relatividad2025_'\n",
    "Host = 'einstein.c3g88cukgiw6.us-east-1.rds.amazonaws.com'\n",
    "Puerto = '5432'\n",
    "BD = 'sigapFba'\n",
    "\n",
    "conexion_url = f'postgresql+psycopg2://{Usuario}:{Password}@{Host}:{Puerto}/{BD}'\n",
    "\n",
    "engine = create_engine(conexion_url)\n",
    "\n",
    "try:\n",
    "    conn = engine.connect()\n",
    "    print(\"conexion realizada\")\n",
    "\n",
    "    query = \"\"\"\n",
    "select\n",
    "\tp.id,\n",
    "\tp.nombre,\n",
    "\tp.aseguradora_id,\n",
    "\ta.nombre as aseguradora_nombre,\n",
    "\tp.gps,\n",
    "\tp.estado,\n",
    "\tp.prima_minima,\n",
    "\tp.desc_max\n",
    "from poliza.aseguradora_riesgo p\n",
    "left join poliza.aseguradora a on p.aseguradora_id = a.id\n",
    "\"\"\"\n",
    "    \n",
    "    df = pd.read_sql(query, conn)\n",
    "    \n",
    "    print(df)\n",
    "    conn.close\n",
    "except Exception as e:\n",
    "    print(\"error al conectar\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0c95e433",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
